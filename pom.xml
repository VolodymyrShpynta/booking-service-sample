<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.1.4</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <groupId>com.vshpynta.booking</groupId>
    <artifactId>booking-service-sample</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>booking-service-sample</name>
    <description>Sample project for room booking service</description>

    <modules>
        <module>booking-service-common</module>
        <module>booking-service-testing-utils</module>
        <module>booking-service-db</module>
        <module>booking-service-persistence</module>
        <module>booking-service-messaging</module>
        <module>booking-service-client</module>
        <module>booking-service</module>
    </modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>17</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <maven.enforcer.plugin.version>3.2.1</maven.enforcer.plugin.version>

        <spring-boot-starter-reactive-aerospike.version>0.12.0</spring-boot-starter-reactive-aerospike.version>
        <camel.version>4.0.1</camel.version>
        <springdoc-openapi.version>2.2.0</springdoc-openapi.version>
        <spring-cloud-starter-openfeign.version>4.0.4</spring-cloud-starter-openfeign.version>
        <spring-cloud.version>2022.0.4</spring-cloud.version>
        <mapstruct.version>1.5.5.Final</mapstruct.version>
        <lombok-mapstruct-binding.version>0.2.0</lombok-mapstruct-binding.version>

        <!-- Testing :: start -->
        <random-beans.version>3.9.0</random-beans.version>
        <playtika.testcontainers.version>2.3.2</playtika.testcontainers.version>
        <!-- Testing :: end -->
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- Own dependencies :: start -->
            <dependency>
                <groupId>com.vshpynta.booking</groupId>
                <artifactId>booking-service-common</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vshpynta.booking</groupId>
                <artifactId>booking-service-testing-utils</artifactId>
                <version>${project.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.vshpynta.booking</groupId>
                <artifactId>booking-service-db</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vshpynta.booking</groupId>
                <artifactId>booking-service-persistence-aerospike</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vshpynta.booking</groupId>
                <artifactId>booking-service-persistence-mariadb</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vshpynta.booking</groupId>
                <artifactId>booking-service-kafka-consumer</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vshpynta.booking</groupId>
                <artifactId>booking-service-kafka-producer</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vshpynta.booking</groupId>
                <artifactId>booking-service-client</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vshpynta.booking</groupId>
                <artifactId>booking-service</artifactId>
                <version>${project.version}</version>
                <classifier>original</classifier>
            </dependency>
            <!-- Own dependencies :: end -->

            <!-- region swagger -->
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
                <version>${springdoc-openapi.version}</version>
            </dependency>
            <!-- endregion -->

            <dependency>
                <groupId>com.aerospike</groupId>
                <artifactId>spring-boot-starter-data-aerospike-reactive</artifactId>
                <version>${spring-boot-starter-reactive-aerospike.version}</version>
            </dependency>

            <!-- region Camel & Kafka  -->
            <dependency>
                <groupId>org.apache.camel.springboot</groupId>
                <artifactId>camel-kafka-starter</artifactId>
                <version>${camel.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.camel.springboot</groupId>
                <artifactId>camel-spring-boot-bom</artifactId>
                <version>${camel.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-bom</artifactId>
                <version>${camel.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--  endregion  -->

            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${mapstruct.version}</version>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok-mapstruct-binding</artifactId>
                <version>${lombok-mapstruct-binding.version}</version>
                <scope>compile</scope>
            </dependency>

            <!-- region Spring Cloud (required for OpenFeign) -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--  endregion  -->

            <!-- Testing dependencies -->
            <dependency>
                <groupId>com.playtika.testcontainers</groupId>
                <artifactId>embedded-mariadb</artifactId>
                <version>${playtika.testcontainers.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.playtika.testcontainers</groupId>
                <artifactId>embedded-aerospike</artifactId>
                <version>${playtika.testcontainers.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.playtika.testcontainers</groupId>
                <artifactId>embedded-toxiproxy</artifactId>
                <version>${playtika.testcontainers.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.playtika.testcontainers</groupId>
                <artifactId>embedded-kafka</artifactId>
                <version>${playtika.testcontainers.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.github.benas</groupId>
                <artifactId>random-beans</artifactId>
                <version>${random-beans.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>io.github.classgraph</groupId>
                        <artifactId>classgraph</artifactId>
                    </exclusion>
                </exclusions>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <annotationProcessorPaths>
                            <path>
                                <groupId>org.mapstruct</groupId>
                                <artifactId>mapstruct-processor</artifactId>
                                <version>${mapstruct.version}</version>
                            </path>
                            <path>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok</artifactId>
                                <version>${lombok.version}</version>
                            </path>
                            <path>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok-mapstruct-binding</artifactId>
                                <version>${lombok-mapstruct-binding.version}</version>
                            </path>
                        </annotationProcessorPaths>
                        <compilerArgs>
                            <compilerArg>
                                -Amapstruct.defaultComponentModel=spring
                            </compilerArg>
                        </compilerArgs>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>${maven.enforcer.plugin.version}</version>
                    <executions>
                        <execution>
                            <id>enforce</id>
                            <configuration>
                                <rules>
                                    <!--
                                    plugin does not recognize wildcard excludes, disabled check for now
                                    <DependencyConvergence />
                                    https://issues.apache.org/jira/browse/MENFORCER-195
                                    -->
                                    <requireMavenVersion>
                                        <version>[3.3.9,)</version>
                                    </requireMavenVersion>
                                    <bannedDependencies>
                                        <excludes>
                                            <exclude>log4j:log4j</exclude>
                                            <exclude>org.slf4j:slf4j-log4j12</exclude>
                                        </excludes>
                                    </bannedDependencies>
                                </rules>
                            </configuration>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>
