server:
  servlet.context-path: /booking-service

#TODO: move to functional tests module
spring:
  datasource:
    url: jdbc:mariadb://${embedded.mariadb.host}:${embedded.mariadb.port}/${embedded.mariadb.database}?createDatabaseIfNotExist=true
    username: ${embedded.mariadb.user}
    password: ${embedded.mariadb.password}
    driverClassName: org.mariadb.jdbc.Driver
  liquibase:
    change-log: classpath:db/changelog/changelog-current.xml

embedded.mariadb.database: booking_db

aerospike:
  hosts: ${embedded.aerospike.host}:${embedded.aerospike.port}
  namespace: ${embedded.aerospike.namespace}
  operationTimeoutMs: 500
  operations:
    maxAttempts: 5
    backoff:
      delay: 3
      multiplier: 2

booking.camel.kafka:
  default.brokerList: ${embedded.kafka.brokerList}
  producer:
    booking-history:
      brokerList: ${booking.camel.kafka.default.brokerList}
      topicName: booking_history
      keySerializer: org.apache.kafka.common.serialization.StringSerializer
      valueSerializer: org.apache.kafka.common.serialization.StringSerializer
      request-required-acks: all
  consumer:
    booking-history:
      brokerList: ${booking.camel.kafka.default.brokerList}
      topicName: booking_history
      keyDeserializer: org.apache.kafka.common.serialization.StringDeserializer
      valueDeserializer: org.apache.kafka.common.serialization.StringDeserializer
      autoCommitEnable: true
      groupId: ${spring.application.name}
      autoOffsetReset: earliest
      consumersCount: 4
